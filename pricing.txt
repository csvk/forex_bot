 
### ---- api_price.py ----- ###

import datetime as dt
import pytz


class ApiPrice():

    def __init__(self, api_ob):
        self.instrument = api_ob['Symbol']
        self.ask = api_ob['BestBid']['Price']
        self.bid = api_ob['BestAsk']['Price']
        self.time = dt.datetime.fromtimestamp(api_ob['Timestamp']/1000, pytz.timezone("UTC")) 

    
    def __repr__(self):
        return f"ApiPrice() {self.instrument} {self.ask} {self.bid} {self.time}"


    def get_dict(self):
        return dict(
            instrument=self.instrument,
            time = self.time,
            ask=self.ask,
            bid=self.bid
        )



### ---- openfx_api.py ----- ###

from models.api_price import ApiPrice

def get_prices(self, instruments_list):
    url = f"tick/{' '.join(instruments_list)}"

    ok, response = self.make_request(url)

    if ok == True:
        return [ApiPrice(x) for x in response]

    return None


def get_pip_value(self, instruments_list):
    url = f"pipsvalue"

    params = {
        'targetCurrency': 'EUR',
        'symbols': ' '.join(instruments_list)
    }


    ok, response = self.make_request(url, params=params)

    if ok == True:
        return { x['Symbol']: x['Value'] for x in response }

    return None



### ---- run_api_tests.py ----- ###
print(api.get_prices(["EURUSD", "GBPJPY", "GBPUSD"]))
print(api.get_pip_value(["EURUSD", "GBPJPY", "GBPUSD"]))

